version: 2
jobs:
  build:
    docker:
    - image: actionml/harness-sdk:0.1
      entrypoint: /entrypoint.sh
    environment:
    - SDK_VERBOSE: true
    - JVM_OPTS: -Xms512m -Xmx3584m -Xss2m
    steps:
    - checkout
    - restore_cache:
        keys:
        - rest-api-{{ checksum "rest-server/build.sbt" }}
    - run:
        name: Build environment details
        command: /details.sh
    - run:
        name: Build rest-server dist
        command: make dist
    - run:
        name: Install Docker Compose
        command: |
          curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          mv ~/docker-compose /usr/local/bin/docker-compose
          docker-compose version 
    - save_cache:
        key: rest-api-{{ checksum "rest-server/build.sbt" }}
        paths:
        - /root/.sbt
        - /root/.ivy2
    - persist_to_workspace:
        root: /root/project/dist
        paths:
        - ./
  publish:
    docker:
    # - image: docker/compose:1.25.0-rc2-alpine
    # - image: circleci/python
    - image: docker:stable
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: /root/project/dist
    # - run:
    #     name: Install Docker Compose
    #     command: |
    #       set -x
    #       apk add --no-cache --update curl curl-dev bash 
    #       # curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    #       # chmod +x /usr/local/bin/docker-compose
    #       docker-compose version 
    - run:
        name: Docker login
        command: |
          echo -n ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
    - run:
        name: Build rest-server docker image
        command: |
          SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          DATE_BUILD=$(date +'%Y-%m-%d')

          case "${CIRCLE_BRANCH}" in
            master|develop|devops|feature/devops-ci)
              docker image build -f docker/Dockerfile --build-arg version=ci --build-arg GIT_HASH=$SHORT_GIT_HASH --build-arg DATE_BUILD=$DATE_BUILD --build-arg BRANCH=${CIRCLE_BRANCH} -t actionml/harness:latest ./
            ;;
            *)
            ;;
          esac
    - run:
        name: Publish docker image
        command: |
          SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)
          DATE_BUILD=$(date +'%Y-%m-%d')
          

          cd docker
          docker-compose up -d --build

          docker-compose exec harness-cli bash -c 'harness-cli status; RESULT=$(exit $?)'
          echo "Result is $RESULT"
          docker-compose exec harness-cli bash -c 'cd harness-cli && ./examples/ur/simple-integration-test.sh; RESULT=$(exit $?)'
          echo "Result is $RESULT"

          if [ $RESULT == 0 ]
          then
            case "${CIRCLE_BRANCH}" in
              "master")
                docker image push actionml/harness:latest
              ;;
              develop|devops|feature/devops-ci)
                docker tag actionml/harness:latest actionml/harness:${CIRCLE_BRANCH}
                docker image push actionml/harness:${CIRCLE_BRANCH}
                
                docker tag actionml/harness:latest actionml/harness:${CIRCLE_BRANCH}-$SHORT_GIT_HASH
                docker image push actionml/harness:${CIRCLE_BRANCH}-$SHORT_GIT_HASH
                
                docker tag actionml/harness:latest actionml/harness:${CIRCLE_BRANCH}-$DATE_BUILD
                docker image push actionml/harness:${CIRCLE_BRANCH}-$DATE_BUILD
              ;;
              *)
              ;;
            esac
          fi
  test:
    docker:
    - image: alpine
    steps:
    - run: echo "unit or other tests"
workflows:
  version: 2
  default:
    jobs:
    - build
    - test
    - publish:
        requires:
        - build
        - test
