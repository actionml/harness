#!/usr/bin/env bash

. "${HARNESS_HOME}/bin/harness-env"

echo
echo -e "${CYAN}Harness CLI Help${NC}"
echo
echo -e "   ${CYAN}harness start [-f]${NC}"
echo -e "       Starts the Harness server and prints configuration information. Starts all active engines."
echo ""

echo -e "   ${CYAN}harness stop${NC}"
echo -e "       Gracefully stops harness and all engines."
echo ""

echo -e "   ${CYAN}harness add </path/to/some-engine.json>${NC}"
echo -e "       Create a new engine and set it's configuration"
echo ""

echo -e "   ${CYAN}harness import <engine-id> <path/to/events/json/files> ${NC}"
echo -e "       Imports events into the engine specified. The path can be to a directory or a single file."
echo ""

#echo -e "   ${CYAN}harness update [-c <some-engine.json> | <engine-id>] [-d | --data-delete] [-f | --force]${NC}"
#echo -e "       Stops the engine, modifies the parameters and restarts the engine. WARNING: not implemented, instead perform harness delete then add"
#echo ""

echo -e "   ${CYAN}harness delete <engine-id>${NC}"
echo -e "       Deletes engine and all data"
echo ""

echo -e "   ${CYAN}harness train engine-id${NC}"
echo -e "       For batch trained Engined this creates a model from previously accumulated data."
echo ""

echo -e "   ${CYAN}harness status [[ engines | engines <engine-id>]]${NC}"
echo -e "       Prints a status message for the harness server, all engines, or the engine specified."
echo ""

echo -e "   ${CYAN}harness user-add [client <engine-id> | admin]${NC}"
echo -e "       Returns a new user-id their secret. Grants the role's permissions."
echo ""

echo -e "   ${CYAN}harness user-delete <user-id>${NC}"
echo -e "       Returns the user-id for the deleted user and deletes all attached permissions."
echo -e "       Warning: not implemented yet."
echo ""

echo -e "   ${CYAN}harness grant <user-id> [client <engine-id> | admin]${NC}"
echo -e "       Returns true if permissions are added to the user-id"
echo -e "       Warning: only one engine-id can be accessed by a \"client\" user currently."
echo ""

echo -e "   ${CYAN}harness revoke <user-id> [client <engine-id>| admin]${NC}"
echo -e "       Revokes the user permissions for the engine specified, or removes admin permissions."
echo ""

echo -e "   ${CYAN}harness status users [<user-id>]${NC}"
echo -e "       Prints the permissions for all users, or the user specified."
echo -e "       Warning: not implemented yet."
echo ""
